{"version":3,"sources":["Components/Container/Container.styled.js","Components/Button/Button.styled.js","Components/FormComponents/FormComponents.styled.js","services/contactsApi.js","Components/Form/Form.styled.js","Components/Section/Section.styled.js","Components/ContactItem/ContactItem.js","Components/Loader/Loader.js","Components/ContactList/ContactList.styled.js","Components/Footer/Footer.js","redux/contacts/contact-action.js","redux/contacts/contact-selector.js","Components/Filter/Filter.js","App.js","redux/contacts/contact-reducer.js","redux/store.js","index.js"],"names":["Container","styled","div","Button","button","ImputEnter","input","InputType","label","InputText","p","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","addContact","body","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation","FormStyled","form","Form","useState","name","setName","number","setNumber","createContact","data","handleChange","evt","target","value","handleSubmit","a","preventDefault","find","contact","toast","error","success","reset","onSubmit","type","pattern","title","placeholder","required","onChange","Section","section","Title","h1","ContactItemStyled","li","ContactName","ContactItem","id","onClick","LoaderContainer","LoaderSimbol","color","height","width","timeout","secondaryColor","ContactStyledList","ul","ContactList","contacts","isFetching","map","ContainerDeveloper","Link","Developer","Footer","href","actions","filterChange","createAction","getFilter","state","filter","Filter","useSelector","dispatch","useDispatch","App","toastOptions","duration","createReducer","_","payload","combineReducers","persistConfigContacts","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.43afed8a.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 1120px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport { Container };\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  padding: 5px 15px;\n  width: 110px;\n  margin-right: auto;\n  margin-left: auto;\n  border: none;\n  border-radius: 5px;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst ImputEnter = styled.input`\n  width: 220px;\n  padding: 5px 15px;\n  border-radius: 5px;\n  border-color: #d4d4d4;\n\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\nconst InputType = styled.label`\n  margin-bottom: 10px;\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\n\nconst InputText = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport { ImputEnter, InputType, InputText };\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://61fcd2f03f1e34001792c9db.mockapi.io/api/',\r\n  }),\r\n  tagTypes: ['Contacts'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => `contacts`,\r\n      providesTags: ['Contacts'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: addContact => ({\r\n        url: `/contacts`,\r\n        method: 'POST',\r\n        body: addContact,\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n  }),\r\n});\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useAddContactMutation,\r\n} = contactApi;\r\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport Button from '../Button';\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from '../../services/contactsApi';\n\nconst FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  width: 450px;\n  padding: 10px 15px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact] = useAddContactMutation();\n  const { data } = useFetchContactsQuery();\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (data.find(contact => contact.name === name)) {\n      toast.error('Контакт существует!');\n      return;\n    } else {\n      toast.success('Контакт добавлен');\n      await createContact({ name, number });\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <InputType>\n        {' '}\n        <InputText>Name</InputText>\n        <ImputEnter\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter your name\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </InputType>\n      <InputType>\n        {' '}\n        <InputText>Name</InputText>\n        <ImputEnter\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter your number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </InputType>\n      <Button type=\"submit\">Add contact</Button>\n    </FormStyled>\n  );\n}\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  margin-top: 25px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  font-weight: 600;\n  font-size: 20px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n\nexport { Section, Title };\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\n\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from '..//../services/contactsApi';\n\nconst ContactItemStyled = styled.li`\n  color: black;\n  &:not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nconst ContactName = styled.p`\n  color: black;\n  margin-bottom: 15px;\n`;\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <ContactItemStyled key={id} id={id}>\n      <ContactName>\n        {name} : {number}\n      </ContactName>\n      <Button onClick={() => deleteContact(id)} type=\"button\">\n        Delete\n      </Button>\n    </ContactItemStyled>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\r\nimport { MutatingDots } from 'react-loader-spinner';\r\n\r\nconst LoaderContainer = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 3;\r\n`;\r\nexport { LoaderContainer };\r\n\r\nexport const LoaderSimbol = () => {\r\n  return (\r\n    <LoaderContainer>\r\n      <MutatingDots\r\n        type=\"MutatingDots\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={1000}\r\n        secondaryColor=\"red\"\r\n      />\r\n    </LoaderContainer>\r\n  );\r\n};\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ContactItem } from '../ContactItem';\nimport { useFetchContactsQuery } from '../../services/contactsApi';\nimport { LoaderSimbol } from '../Loader/';\nconst ContactStyledList = styled.ul`\n  width: 450px;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nconst ContactList = () => {\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n\n  return (\n    <ContactStyledList>\n      {isFetching && <LoaderSimbol />}\n      {contacts &&\n        contacts.map(({ name, id, number }) => (\n          <ContactItem key={id} name={name} id={id} number={number} />\n        ))}\n    </ContactStyledList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst ContainerDeveloper = styled.div`\n  transform: translate(-45%, -20%);\n  position: fixed;\n  top: 95%;\n  left: 50%;\n`;\n\nconst Link = styled.a`\n  color: orange;\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nconst Developer = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: orange;\n  text-align: right;\n`;\n\nexport const Footer = () => {\n  return (\n    <ContainerDeveloper>\n      <Developer>\n        Developed by{' '}\n        <Link href=\"https://www.linkedin.com/in/alexey-korotenko-379613219/\">\n          Alexey Korotenko\n        </Link>\n      </Developer>\n    </ContainerDeveloper>\n  );\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst filterChange = createAction('contact/filter');\n\nconst actions = { filterChange };\nexport default actions;\n","export const getContact = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getAllContacts = state => {\n  const contacts = getContact(state);\n  const filter = getFilter(state);\n\n  const normalizeFilter = filter.toLocaleLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n};\n","import React from 'react';\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\nimport actions from '../../redux/contacts/contact-action';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contact-selector';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handler = evt => {\n    dispatch(actions.filterChange(evt.target.value));\n  };\n\n  return (\n    <InputType>\n      <InputText>Find contact by name</InputText>\n      <ImputEnter type=\"text\" value={filter} onChange={handler} />\n    </InputType>\n  );\n};\n\nexport default Filter;\n","import './App.css';\nimport React from 'react';\nimport { Container } from './Components/Container';\nimport Form from './Components/Form';\nimport { Section, Title } from './Components/Section';\nimport ContactList from './Components/ContactList';\nimport { Footer } from './Components/Footer';\nimport Filter from './Components/Filter';\nimport { Toaster } from 'react-hot-toast';\n\nexport default function App() {\n  return (\n    <Container>\n      <Toaster\n        toastOptions={{\n          error: {\n            duration: 2000,\n          },\n        }}\n      />\n      <Section>\n        <Title>Phonebook</Title>\n        <Form />\n      </Section>\n      <Section>\n        <Title>Contacts</Title>\n        <Filter />\n        <ContactList />\n      </Section>\n\n      <Footer />\n    </Container>\n  );\n}\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport actions from './contact-action';\n\nconst filter = createReducer('', {\n  [actions.filterChange]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\nimport contacts from './contacts/contact-reducer';\nimport { contactApi } from '../services/contactsApi';\n\nconst middleware = getDefaultMiddleware => [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  contactApi.middleware,\n];\n\nconst persistConfigContacts = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\nconst persistedReducer = persistReducer(persistConfigContacts, contacts);\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistedReducer,\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n\n  middleware,\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}